<configuration name='indelCallingAnalysis' description='Indel Calling for NGS data using platypus.'
               configurationType='analysis' class='de.dkfz.roddy.core.Analysis' workflowClass='de.dkfz.b080.co.indelcallingworkflow.IndelCallingWorkflow'
               runtimeServiceClass='de.dkfz.b080.co.common.BasicCOProjectsRuntimeService'
               imports="commonCOWorkflowsSettings"
               listOfUsedTools="indelCalling,indelAnnotation,indelDeepAnnotation,indelVcfFilter,platypusIndelExtractor"
               usedToolFolders="indelCallingWorkflow,tools">
    <configurationvalues>

	<cvalue name="workflowEnvironmentScript" value="workflowEnvironment_tbiCluster" type="string"/>
        <cvalue name="checkSampleSwapEnvironmentScript" value="checkSampleSwapEnvironment_tbiCluster" type="string"/>
        <cvalue name="condaEnvironmentName" value="IndelCallingWorkflow" type="string"/>

        <cvalue name='INDELFILE_PREFIX' value='indel_' type="string"/>
        <cvalue name='PLATYPUS_PARAMS' value="''" type="string"/>
        <cvalue name='INDEL_ANNOTATION_PADDING' value="10" type="string"/>
        <cvalue name='INDEL_ANNOTATION_MINOVERLAPFRACTION' value="0.7" type="string"/>
        <cvalue name='INDEL_ANNOTATION_MAXBORDERDISTANCESUM' value="20" type="string"/>
        <cvalue name='INDEL_ANNOTATION_MAXNROFMATCHES' value="5" type="string"/>
        <cvalue name='ADDITIONAL_FILTER_OPTS' value="''" type="string"/>
        <cvalue name='MIN_CONFIDENCE_SCORE' value="8" type="string"/>
        <cvalue name='PLOIDY_LEVEL' value="2" type="integer"/>
        <cvalue name='INDIVIDUAL_COUNT' value="2" type="integer"/>
        <cvalue name='CPU_COUNT' value="10" type="integer"/>
        <cvalue name='CALL_SNP' value="1" type="integer"/>
        <cvalue name='MAX_VARIANT_SCREENSHOTS' value="100" type="integer"/>

        <cvalue name='runIndelAnnotation' value="true" type="boolean"/>
        <cvalue name='runIndelDeepAnnotation' value="true" type="boolean"/>
        <cvalue name='runIndelVCFFilter' value="true" type="boolean"/>
        <cvalue name='runTinda' value="true" type="boolean" description="Check for sample swaps."/>

        <cvalue name="CONFIDENCE_OPTS_INDEL" value="" type="string"
                description="max read depth in control (-t INT default 150 for genomes, set to 500 for exomes) can now be ommited to avoid depth dependent punishing by setting -c 0. It is also possible to get a justification for the confidence score by setting the -p 1 flag. Use --skip_order_check to overrule the order checking of control and tumor columns."/>

        <cvalue name='VCF_SCREENSHOTS_PREFIX' value="indel_" type="string"/>
        <cvalue name='WINDOW_SIZE' value="100" type="string"/>

        <cvalue name='REPEAT_MASKER' value="" type="string"/>

        <cvalue name="CHROM_SIZES_FILE" value="${hg19DatabaseDirectory}/stats/hg19_1-22_X_Y_M.fa.chrLenOnlyACGT.tab" type="path"
                description="Required by getRefGenomeAndChrPrefixFromHeader() from the parent/COWorkflow plugin. Per chromosome counts of only A, T, C ond G IUPAC codes."/>
	
	 
        <!--## Databases

         All .vcf.gz and .bed.gz files needs to be accompanied by a tabix index (same path + .tbi suffix).

         -->
        <cvalue name="KGENOME" value="${hg19DatabasesDirectory}/1000genomes/ALL.wgs.phase1_integrated_calls.20101123.indels_plain.vcf.gz" type="path"/>
        <cvalue name="DBSNP_INDEL" value="${hg19DatabasesDirectory}/dbSNP/dbSNP_147/00-All.INDEL.vcf.gz" type="path"/>
        <cvalue name="DBSNP_SNV" value="${hg19DatabasesDirectory}/dbSNP/dbSNP_147/00-All.SNV.vcf.gz" type="path"/>
        <cvalue name="ExAC" value="${hg19DatabasesDirectory}/ExAC/ExAC_nonTCGA.r0.3.1.sites.vep.vcf.gz" type="path"/>
        <cvalue name="EVS" value="${hg19DatabasesDirectory}/EVS/ESP6500SI-V2-SSA137.updatedProteinHgvs.ALL.snps_indels.vcf.gz" type="path"/>
        <cvalue name="LOCALCONTROL_WGS" value="${hg19DatabasesDirectory}/LocalControls/ExclusionList_2019/MPsnvs_PLindels/ExclusionList_2019_HIPO-PCAWG_MP_PL_WGS.INDELs.AFgt1.vcf.gz" type="path"/>
        <cvalue name="LOCALCONTROL_WES" value="${hg19DatabasesDirectory}/LocalControls/ExclusionList_2019/MPsnvs_PLindels/ExclusionList_2019_H021_MP_PL_WES.INDELs.AFgt1.vcf.gz" type="path"/>        
        <cvalue name="GENE_MODEL_BEDFILE" value='${hg19DatabasesDirectory}/gencode/gencode19/GencodeV19_Exons_plain.bed.gz' type="path" />
        
        <cvalue name="GNOMAD_V2_1_GENOME_SNV_INDEL" value="${hg19DatabasesDirectory}/gnomAD/gnomad_v2.1/gnomad.genomes.r2.1.sites.SNV-INDEL.vcf.gz" type="path" />        
        <cvalue name="GNOMAD_V2_1_EXOME_SNV_INDEL" value="${hg19DatabasesDirectory}/gnomAD/gnomad_v2.1/gnomad.exomes.r2.1.sites.SNV-INDEL.vcf.gz" type="path" />
        <cvalue name="LOCAL_CONTROL_PLATYPUS_WGS_SNV_INDEL" value="${hg19DatabasesDirectory}/LocalControls/ExclusionList_2019/PLsnvs_PLindels/version3/ExclusionList_2019_HIPO-PCAWG_PL_WGS.SNVs-INDELs.AFgt1.vcf.gz" type="path" />
        <cvalue name="LOCAL_CONTROL_PLATYPUS_WES_SNV_INDEL" value="${hg19DatabasesDirectory}/LocalControls/ExclusionList_2019/PLsnvs_PLindels/version3/ExclusionList_2019_H021_PL_WES.SNVs-INDELs.AFgt1.vcf.gz" type="path" />
        
        <cvalue name="GNOMAD_WGS_SNV_INDEL" value="${GNOMAD_V2_1_GENOME_SNV_INDEL}" type="path" />
        <cvalue name="GNOMAD_WES_SNV_INDEL" value="${GNOMAD_V2_1_EXOME_SNV_INDEL}" type="path" />
        <cvalue name="LOCALCONTROL_PLATYPUS_WGS_SNV_INDEL" value="${LOCAL_CONTROL_PLATYPUS_WGS_SNV_INDEL}" type="path" />
        <cvalue name="LOCALCONTROL_PLATYPUS_WES_SNV_INDEL" value="${LOCAL_CONTROL_PLATYPUS_WES_SNV_INDEL}" type="path" />
        
        <cvalue name="TINDA_MAX_MAF_CUTOFF" value="0.001" type='float' />

        <cvalue name="VCF_NORMAL_HEADER_COL" value='"blood|normal|control|buffy_coat|germline"' type="string"/>
        <cvalue name="VCF_TUMOR_HEADER_COL" value='"tumor|metastasis|disease|relapse|autopsy"' type="string"/>
        <cvalue name="DBSNP_COL" value="DBSNP" type="string"/>
        <cvalue name="KGENOMES_COL" value="1K_GENOMES" type="string"/>
        <cvalue name="GNOMAD_WES_COL" value="GNOMAD_EXOMES" type="string"/>
        <cvalue name="GNOMAD_WGS_COL" value="GNOMAD_GENOMES" type="string"/>
        <cvalue name="LOCALCONTROL_WGS_COL" value="LocalControlAF_WGS" type="string"/>
        <cvalue name="LOCALCONTROL_WES_COL" value="LocalControlAF_WES" type="string"/>

        <cvalue name="TINDA_RIGHT_BORDER" value="0.45" type='float'/>
        <cvalue name="TINDA_BOTTOM_BORDER" value="0.01" type='float'/>
        <cvalue name="TINDA_RUN_RSCRIPT" value="0" type='string'/>
        <cvalue name="SEQUENCE_TYPE" value='WGS' type='string' description="Only required for TiNDA."/>

        <cvalue name='ANNOVAR_BINARY' value='${sharedFilesBaseDirectory}/annovar/annovar_Feb2016/annotate_variation.pl' type='path'
                description="Full path to annotate_variation.pl script, which can be found in the bin/ directory in the AnnoVar distribution."/>
        <cvalue name='ANNOVAR_BUILDVER' value='hg19' type='string'/>
        <cvalue name='ANNOVAR_DBPATH' value='${sharedFilesBaseDirectory}/annovar/annovar_Feb2016/humandb/' type='path'
                description="Path to humandb/ directory in the AnnoVar distribution"/>
        <cvalue name='ANNOVAR_DBTYPE' value="'-dbtype wgEncodeGencodeCompV19'" type='string'
                description="-dbtype option used for the ANNOVAR_BINARY (see above)."/>

        <cvalue name="ANNOVAR_GENEANNO_COLS" value='"ANNOVAR_FUNCTION,GENE,EXONIC_CLASSIFICATION,ANNOVAR_TRANSCRIPTS"' type="string"/>
        <cvalue name="ANNOVAR_SEGDUP_COL" value="SEGDUP" type="string"/>
        <cvalue name="ANNOVAR_CYTOBAND_COL" value="CYTOBAND" type="string"/>
        
        <!-- gnomAD files for no-control workflow -->
        <cvalue name="GNOMAD_WGS_INDEL" value="${hg19DatabasesDirectory}/gnomAD/gnomad_v2.1/gnomad.genomes.r2.1.sites.INDEL.vcf.gz" />
        <cvalue name="GNOMAD_WES_INDEL" value="${hg19DatabasesDirectory}/gnomAD/gnomad_v2.1/gnomad.exomes.r2.1.sites.INDEL.vcf.gz" />

        <!-- More configuration options -->        
        <cvalue name="MINCOV" value="0" type="integer" description="minimal coverage for somatic SNVs (MAF plot)"/>
        <cvalue name="ALLELE_FREQ" value="0" type="integer" description="ignore SNVs with MAF below that value (rainfall plot)"/>
        <cvalue name="CLINICALANNO" value='""' type="string" description="tab separated file with fields in the following order: ID, decoded PID, gender, age, subgroup"/>

        <!--### Bias filter parameters-->
        <!--## Thresholds to determine if a field is biased. A field is biased if (and only if) its p value is smaller then biasPVal. If that is the case the bias ratio determines if it is a weak bias (ratio smaller biasRatioThreshold) or a strong bias (ratio larger biasRatioThreshold)-->
        <cvalue name="biasPValThreshold" value="0.01" type="float"
                description="probability threshold to accept bias. The p value gives the probability to observe the same or stronger bias by chance when assuming a binomial distribution with event probability of 0.5"/>
        <cvalue name="biasRatioMinimum" value="0.53" type="float" description=" minimum fraction of reads in direction of bias / total variant reads we require to call a field biased"/>
        <cvalue name="biasRatioThreshold" value="0.63" type="float" description="threshold for fraction of reads in direction of bias / total variant reads above which it will be considered a strong bias"/>
        <cvalue name="nReads" value="20" type="integer" description=" number of reads in one field above which a bias is possible"/>
        <cvalue name="nMuts" value="4" type="integer" description=" number of muts above which a bias is possible"/>

        <!--## Thresholds to determine if a variant call is an artifact-->
        <!--#max mumber of reads we will tolerate in the direction opposite to the bias for it to be called an artefact-->
        <cvalue name="maxNumOppositeReadsSequencingWeakBias" value="0" type="integer"/>
        <cvalue name="maxNumOppositeReadsSequenceWeakBias" value="0" type="integer"/>
        <cvalue name="maxNumOppositeReadsSequencingStrongBias" value="1" type="integer"/>
        <cvalue name="maxNumOppositeReadsSequenceStrongBias" value="1" type="integer"/>
        <cvalue name="rVcf" value="0.1" type="float"
                description="max fraction of reads (reads/total reads) we tolerate in the direction opposite to the bias for it to be called an artefact"/>

        <!--## If isNoControlWorkflow is false, then the extra filtering step will be omitted -->
        <cvalue name="isNoControlWorkflow" value="false" type="boolean"/>

        <!--#### EXTRA ANNOTATION AND FILTERING -->
        <!--#### BELOW VALUES WILL BE NEGLECTED WHEN THE WORKFLOW IS RUN WITH CONTROL -->
        <!--## Filter switch -->
        <cvalue name="FILTER_GNOMAD_EXOMES" value="${isNoControlWorkflow}" type="boolean"/>
        <cvalue name="FILTER_GNOMAD_GENOMES" value="${isNoControlWorkflow}" type="boolean"/>
        <cvalue name="FILTER_1KGENOMES" value="${isNoControlWorkflow}" type="boolean"/>
        <cvalue name="FILTER_RECURRENCE" value="false" type="boolean"/>
        <cvalue name="FILTER_LOCALCONTROL" value="${isNoControlWorkflow}" type="boolean"/>
        <cvalue name="FILTER_NON_CLINIC" value="${isNoControlWorkflow}" type="boolean"/>

        <!--## Filter criteria -->
        <!--## The rows with corresponding values larger than below criteria will be filtered out. -->
        <cvalue name="CRIT_GNOMAD_EXOMES_maxMAF" value="0.001" type="float"/>
        <cvalue name="CRIT_GNOMAD_GENOMES_maxMAF" value="0.001" type="float"/>
        <cvalue name="CRIT_1KGENOMES_maxMAF" value="0.01" type="float"/>
        <cvalue name="CRIT_RECURRENCE" value="7" type="integer"/>
        <cvalue name="CRIT_LOCALCONTROL_maxMAF" value="0.05" type="float"/>
        <!--#### END EXTRA ANNOTATION AND FILTERING -->

        <!-- PIPE_CONFIG configuration bundles are needed for the createpipes.pl script (from the COWorkflow plugin). The createpipes.pl script
             is kind of a Bash meta-programming tool that composes a command to be run in an eval context.

             Every variable value in this block has the following format:

             $path:$additionalColumns:$reportLevel:$additionalCliOptions

             path:                 Path to a sorted and headered, bgzipped and tabixid file.
             additionalColumns:    Additional columns to include (default is the entry in the "name" column for bed)
             reportLevel:          Report level for matches (default is 2)
             additionalCliOptions: Additional command-line options to pass through to annotate_vcf.pl

             Make sure to always have 4 parameters (so three ':' delimiters).

             If whitespaces are required (e.g. in the additional CLI options), use quotation marks like in this example. E.g.:

             #MAPABILITY="/ibios/co02/annotation/hg19/wgEncodeCrgMapabilityAlign100mer.bedGraph.gz:::-breakPointMode -aEndOffset=1"

             -->

        <configurationValueBundle name='PIPE_CONFIG:INDEL_RELIABILITY'>
            <cvalue name='MAPABILITY' value='"${hg19DatabaseUCSCDirectory}/wgEncodeCrgMapabilityAlign100mer_chr.bedGraph.gz:::--breakPointMode --aEndOffset=1"' type="path"/>
            <cvalue name='HISEQDEPTH' value='${hg19DatabaseUCSCDirectory}/HiSeqDepthTop10Pct_chr.bed.gz' type="path"/>
            <cvalue name='SIMPLE_TANDEMREPEATS' value='${hg19DatabaseUCSCDirectory}/repeats/SimpleTandemRepeats_chr.bed.gz:4' type="path"/>
            <cvalue name='REPEAT_MASKER' value='${hg19DatabaseUCSCDirectory}/Sept2013/UCSC_27Sept2013_RepeatMasker.bed.gz' type="path"/>
            <cvalue name='DUKE_EXCLUDED' value='${hg19DatabaseUCSCDirectory}/DukeExcluded_chr.bed.gz' type="path"/>
            <cvalue name='DAC_BLACKLIST' value='${hg19DatabaseUCSCDirectory}/DACBlacklist_chr.bed.gz' type="path"/>
            <cvalue name='SELFCHAIN' value='${hg19DatabaseUCSCDirectory}/selfChain_chr.bed.gz:4::--maxNrOfMatches=5' type="path"/>
        </configurationValueBundle>

        <configurationValueBundle name='PIPE_CONFIG:INDEL_DEEPANNOTATION'>
            <cvalue name='CpGislands' value='${hg19DatabaseUCSCDirectory}/Sept2013/UCSC_27Sept2013_CpG_islands.bed.gz' type="path"/>
            <cvalue name='CgiMountains' value='${assembliesHG191000GenomesDirectory}/CustomDeepAnnotation/CgiMountains_chr.bed.gz:4' type="path"/>
            <cvalue name='Enhancers' value='${hg19DatabaseUCSCDirectory}/Enhancers_Vista_2011_01_14_chr.bed.gz' type="path"/>
            <cvalue name='miRNAs_snoRNAs' value='${hg19DatabasesDirectory}/miRNA/miRNA_snoRNAs_miRBaseRelease15_chr.bed.gz' type="path"/>
            <cvalue name='miRBase18' value='${hg19DatabasesDirectory}/miRNA/miRBase_version-18_chr.bed.gz' type="path"/>
            <cvalue name='miRNAtargets' value='${hg19DatabasesDirectory}/miRNA/miRNAsites_TargetScan_BartelLab_2011_01_14_chr.bed.gz' type="path"/>
            <cvalue name='phastConsElem20bp' value='${hg19DatabaseUCSCDirectory}/phastConsElem_min20bp_chr.bed.gz:4' type="path"/>
            <cvalue name='TFBScons' value='${hg19DatabaseUCSCDirectory}/tfbsConsSites_noncoding_merged_chr.bed.gz' type="path"/>
            <cvalue name='COSMIC' value='${hg19DatabasesDirectory}/COSMIC/Cosmic_v77_hg19_coding_SNVs.bed.gz:7,8,9:1' type="path"/>
            <cvalue name='ENCODE_DNASE' value='${hg19DatabaseUCSCDirectory}/Sept2013/UCSC_27Sept2013_DNase_cluster_V2.bed.gz' type="path"/>
            <cvalue name='ENCODE_TFBS' value='${hg19DatabaseUCSCDirectory}/Sept2013/UCSC_27Sept2013_wgEncodeRegTfbsClusteredV3.bed.gz' type="path"/>
        </configurationValueBundle>

    </configurationvalues>
    <processingTools>
        <tool name="workflowEnvironment_conda" value="conda.sh" basepath="indelCallingWorkflow/environments"/>
    	<tool name="workflowEnvironment_tbiCluster" value="tbi-cluster.sh" basepath="indelCallingWorkflow/environments"/>
        <tool name="checkSampleSwapEnvironment_tbiCluster" value="tbi-cluster_checkSampleSwap.sh" basepath="indelCallingWorkflow/environments"/>

        <tool name="platypusConfidenceAnnotation" value="confidenceAnnotation_Indels.py" basepath="indelCallingWorkflow"/>
        <tool name="platypusConfidenceAnnotationNoControl" value="platypusConfidenceAnnotation_noControl.pl" basepath="indelCallingWorkflow"/>
        <tool name="platypusIndelExtractor" value="indel_extractor_v1.pl" basepath="indelCallingWorkflow"/>
        <tool name="onlyExtractMatch" value="extract_match_only.py" basepath="indelCallingWorkflow"/>
        <tool name="screenshot" value="visualize.py" basepath="indelCallingWorkflow"/>
        <tool name="vcfFilterByCrit" value="vcf_filter_by_crit.py" basepath="indelCallingWorkflow"/>
        <tool name="platypusIndelJson" value="indel_json_v1.0.pl" basepath="indelCallingWorkflow"/>
        <tool name="textPdf" value="textPdf.R" basepath="indelCallingWorkflow"/>

        <!--## SwapChecker -->
        <tool name="checkSampleSwapScript" value="checkSampleSwap_TiN.pl" basepath="indelCallingWorkflow"/>
        <tool name="splitMnpsScript" value="splitMNPsAndComplex.py" basepath="indelCallingWorkflow"/>        
        <tool name="tumorInNormalPlotRscript" value="TiN_CanopyBasedClustering.R" basepath='indelCallingWorkflow'/>
        <tool name="canopyClusterFunctionRscript" value="canopyCluster_updatedFunction.R" basepath='indelCallingWorkflow'/>
        <!--tool name="CanopyLinearChrData" value="chrlengths.plain.sorted.txt" basepath='indelCallingWorkflow'/-->
        <!--# SwapChecker end (but note, that the checkSampleSwap with and without control are also part of this.-->

        <!-- With control bam / germline -->
        <tool name="indelCalling" value="indelCalling.sh" basepath="indelCallingWorkflow">
            <resourcesets>
                <rset size="xs" memory="16" cores="8" nodes="1" walltime="1"/>
                <rset size="s" memory="16" cores="8" nodes="1" walltime="5"/>
                <rset size="m" memory="16" cores="8" nodes="1" walltime="25"/>
                <rset size="l" memory="16" cores="8" nodes="1" walltime="50"/>
                <rset size="xl" memory="16" cores="16" nodes="1" walltime="200"/>
            </resourcesets>
            <input type="file" typeof="TumorBamFile" scriptparameter="FILENAME_TUMOR_BAM"/>
            <input type="file" typeof="ControlBamFile" scriptparameter="FILENAME_CONTROL_BAM"/>
            <output type="file" typeof="VCFFileForIndels" fnpatternselectiontag="rawVCF" scriptparameter="FILENAME_VCF_RAW"/>
        </tool>
        <tool name="checkSampleSwap" value="checkSampleSwap_TiN.sh" basepath="indelCallingWorkflow">
            <resourcesets>
                <rset size="s" memory="3" cores="3" nodes="1" walltime="2"/>
                <rset size="m" memory="3" cores="3" nodes="1" walltime="5"/>
                <rset size="l" memory="3" cores="3" nodes="1" walltime="10"/>
                <rset size="xl" memory="3" cores="3" nodes="1" walltime="24"/>
            </resourcesets>
            <input type="file" typeof="VCFFileForIndels" scriptparameter="FILENAME_VCF_RAW"/>
            <input type="file" typeof="TumorBamFile" scriptparameter="FILENAME_TUMOR_BAM"/>
            <input type="file" typeof="ControlBamFile" scriptparameter="FILENAME_CONTROL_BAM"/>
            <output type="tuple" >
                <output type="file" typeof="TextFile" scriptparameter="FILENAME_CHECKPOINT_SWAP"/>
                <output type="file" typeof="VCFFileForIndels" scriptparameter="FILENAME_TINDA_VCF" />
                <output type="file" typeof="VCFFileForIndels" scriptparameter="FILENAME_SWAP_JSON" />
            </output>
        </tool>
        <tool name="indelAnnotation" value="platypusIndelAnnotation.sh" basepath="indelCallingWorkflow">
            <resourcesets>
                <rset size="s" memory="3" cores="3" nodes="1" walltime="2"/>
                <rset size="m" memory="3" cores="3" nodes="1" walltime="5"/>
                <rset size="l" memory="3" cores="3" nodes="1" walltime="10"/>
                <rset size="xl" memory="8" cores="3" nodes="1" walltime="10"/>
            </resourcesets>
            <input type="file" typeof="TumorBamFile" scriptparameter="FILENAME_TUMOR_BAM"/>
            <input type="file" typeof="ControlBamFile" scriptparameter="FILENAME_CONTROL_BAM"/>
            <input type="file" typeof="VCFFileForIndels" scriptparameter="FILENAME_VCF_RAW"/>
            <output type="tuple">
                <output type="file" typeof="VCFFileForIndels" scriptparameter="FILENAME_VCF_OUT"/>
                <output type="file" typeof="CPFileAnno" scriptparameter="FILENAME_CHECKPOINT"/>
            </output>
        </tool>
        <tool name="indelDeepAnnotation" value="vcf_pipeAnnotator.sh" basepath="indelCallingWorkflow">
            <resourcesets>
                <rset size="s" memory="2" cores="3" nodes="1" walltime="2"/>
                <rset size="m" memory="2" cores="3" nodes="1" walltime="2"/>
                <rset size="l" memory="2" cores="3" nodes="1" walltime="20"/>
                <rset size="xl" memory="8" cores="2" nodes="1" walltime="10"/>
            </resourcesets>
            <input type="file" typeof="VCFFileForIndels" scriptparameter="FILENAME_VCF"/>
            <input type="string" setby="callingCode" scriptparameter="PIPENAME"/>
            <output type="tuple">
                <output type="file" typeof="VCFFileForIndels" scriptparameter="FILENAME_VCF_OUT"/>
                <output type="file" typeof="CPFileDeepAnno" scriptparameter="FILENAME_CHECKPOINT"/>
            </output>
        </tool>
        <tool name="indelVcfFilter" value="filter_vcf.sh" basepath="indelCallingWorkflow">
            <resourcesets>
                <rset size="s" memory="2" cores="1" nodes="1" walltime="1"/>
                <rset size="m" memory="2" cores="1" nodes="1" walltime="2"/>
                <rset size="l" memory="2" cores="1" nodes="1" walltime="10"/>
                <rset size="xl" memory="2" cores="1" nodes="1" walltime="72"/>
            </resourcesets>
            <input type="file" typeof="TumorBamFile" scriptparameter="FILENAME_TUMOR_BAM"/>
            <input type="file" typeof="ControlBamFile" scriptparameter="FILENAME_CONTROL_BAM"/>
            <input type="file" typeof="VCFFileForIndels" scriptparameter="FILENAME_VCF"/>
            <output type="file" typeof="CPFileFilter" scriptparameter="FILENAME_CHECKPOINT"/>
        </tool>


        <!-- Without control bam / germline -->
        <tool name="indelCallingWithoutControl" value="indelCalling.sh" basepath="indelCallingWorkflow">
            <resourcesets>
                <rset size="xs" memory="16" cores="8" nodes="1" walltime="1"/>
                <rset size="s" memory="16" cores="8" nodes="1" walltime="5"/>
                <rset size="m" memory="16" cores="8" nodes="1" walltime="25"/>
                <rset size="l" memory="16" cores="8" nodes="1" walltime="50"/>
                <rset size="xl" memory="16" cores="8" nodes="1" walltime="100"/>
            </resourcesets>
            <input type="file" typeof="TumorBamFile" scriptparameter="FILENAME_TUMOR_BAM"/>
            <output type="file" typeof="VCFFileForIndels" fnpatternselectiontag="rawVCF" scriptparameter="FILENAME_VCF_RAW"/>
        </tool>
        <tool name="indelAnnotationWithoutControl" value="platypusIndelAnnotation.sh" basepath="indelCallingWorkflow">
            <resourcesets>
                <rset size="s" memory="3" cores="3" nodes="1" walltime="2"/>
                <rset size="m" memory="3" cores="3" nodes="1" walltime="5"/>
                <rset size="l" memory="3" cores="3" nodes="1" walltime="10"/>
                <rset size="xl" memory="8" cores="3" nodes="1" walltime="10"/>
            </resourcesets>
            <input type="file" typeof="TumorBamFile" scriptparameter="FILENAME_TUMOR_BAM"/>
            <input type="file" typeof="VCFFileForIndels" scriptparameter="FILENAME_VCF_RAW"/>
            <output type="tuple">
                <output type="file" typeof="VCFFileForIndels" scriptparameter="FILENAME_VCF_OUT"/>
                <output type="file" typeof="CPFileAnno" scriptparameter="FILENAME_CHECKPOINT"/>
            </output>
        </tool>
        <tool name="indelVcfFilterWithoutControl" value="filter_vcf.sh" basepath="indelCallingWorkflow">
            <resourcesets>
                <rset size="s" memory="2" cores="1" nodes="1" walltime="1"/>
                <rset size="m" memory="2" cores="1" nodes="1" walltime="2"/>
                <rset size="l" memory="2" cores="1" nodes="1" walltime="10"/>
                <rset size="xl" memory="2" cores="1" nodes="1" walltime="72"/>
            </resourcesets>
            <input type="file" typeof="TumorBamFile" scriptparameter="FILENAME_TUMOR_BAM"/>
            <input type="file" typeof="VCFFileForIndels" scriptparameter="FILENAME_VCF"/>
            <output type="file" typeof="CPFileFilter" scriptparameter="FILENAME_CHECKPOINT"/>
        </tool>

    </processingTools>
    <filenames package='de.dkfz.b080.co.files' filestagesbase='de.dkfz.b080.co.files.COFileStage'>
        <filename class='VCFFileForIndels' selectiontag="rawVCF" derivedFrom="TumorBamFile" pattern="${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indel_${pid}.vcf.raw.gz"/>
        <filename class='VCFFileForIndels' selectiontag="rawVCFConfidenceAnnotation" derivedFrom="TumorBamFile" pattern="${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indel_${pid}.vcf.gz"/>
        <filename class='VCFFileForIndels' derivedFrom="VCFFileForIndels" pattern="${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indel_${pid}.vcf.gz"/>
        <filename class='VCFFileForIndels' selectiontag="somatic" derivedFrom='VCFFileForIndels'
                  pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indel_${pid}_somatic_indels_conf_${MIN_CONFIDENCE_SCORE}_to_10.vcf'/>
        <filename class='VCFFileForIndels' selectiontag="somatic_functional" derivedFrom='VCFFileForIndels'
                  pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indel_${pid}_somatic_functional_indels_conf_${MIN_CONFIDENCE_SCORE}_to_10.vcf'/>

        <filename class='CPFileAnno'     onTool="indelAnnotation" pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indelCallingCheckPoint_${TOOL_ID}'/>
        <filename class='CPFileDeepAnno' onTool="indelDeepAnnotation" pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indelCallingCheckPoint_${TOOL_ID}'/>
        <filename class='CPFileFilter'   onTool="indelVcfFilter" pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indelCallingCheckPoint_${TOOL_ID}'/>

        <filename class='CPFileAnno'     onTool="indelAnnotationWithoutControl" pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indelCallingCheckPoint_${TOOL_ID}'/>
        <filename class='CPFileFilter'   onTool="indelVcfFilterWithoutControl" pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indelCallingCheckPoint_${TOOL_ID}'/>

        <filename class='TextFile' onScriptParameter='FILENAME_CHECKPOINT_SWAP' pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indelCallingCheckPoint_${TOOL_ID}'/>
        <filename class='VCFFileForIndels' onScriptParameter='FILENAME_TINDA_VCF' pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/smallVariants_${pid}.GTfiltered_gnomAD.Germline.Rare.Rescue.vcf'/>
        <filename class='VCFFileForIndels' onScriptParameter='FILENAME_SWAP_JSON' pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/checkSampleSwap.json'/>

        <!--filename class='CPFileSwap'   onTool="checkSampleSwap" pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indelCallingCheckPoint_${TOOL_ID}'/-->

    </filenames>
</configuration>

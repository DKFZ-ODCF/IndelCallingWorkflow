<configuration name='indelCallingBrawlAnalysis' description='Indel Calling for NGS data using platypus.'
               configurationType='analysis'
               class='de.dkfz.roddy.core.Analysis'
               brawlWorkflow="IndelCalling"
               brawlBaseWorkflow="WorkflowUsingMergedBams"
               imports="snvCallingAnalysis"
               listOfUsedTools="indelCalling,indelAnnotation,indelDeepAnnotation,indelVcfFilter,platypusIndelExtractor"
               usedToolFolders="snvPipeline,indelCallingWorkflow,tools">
    <configurationvalues>
        <cvalue name='PLATYPUS_PARAMS' value="''" type="string"/>
        <cvalue name='INDEL_ANNOTATION_PADDING' value="10" type="string"/>
        <cvalue name='INDEL_ANNOTATION_MINOVERLAPFRACTION' value="0.7" type="string"/>
        <cvalue name='INDEL_ANNOTATION_MAXBORDERDISTANCESUM' value="20" type="string"/>
        <cvalue name='INDEL_ANNOTATION_MAXNROFMATCHES' value="5" type="string"/>
        <cvalue name='ADDITIONAL_FILTER_OPTS' value="''" type="string"/>
        <cvalue name='MIN_CONFIDENCE_SCORE' value="8" type="string"/>
        <cvalue name='PLOIDY_LEVEL' value="2" type="integer"/>
        <cvalue name='INDIVIDUAL_COUNT' value="2" type="integer"/>
        <cvalue name='CPU_COUNT' value="10" type="integer"/>
        <cvalue name='CALL_SNP' value="0" type="integer"/>

        <cvalue name='runIndelAnnotation' value="true" type="boolean"/>
        <cvalue name='runIndelDeepAnnotation' value="true" type="boolean"/>
        <cvalue name='runIndelVCFFilter' value="true" type="boolean"/>
        <cvalue name="CONFIDENCE_OPTS_INDEL" value='"--debug=0"' type="string" description="max read depth in control (-t INT default 150 for genomes, set to 500 for exomes) can now be ommited to avoid depth dependent punishing by setting -c 0. It is also possible to get a justification for the confidence score by setting the -p 1 flag"/>

        <cvalue name='VCF_SCREENSHOTS_PREFIX' value="indel_" type="string"/>
        <cvalue name='WINDOW_SIZE' value="100" type="string"/>
        <cvalue name='REPEAT_MASKER' value="" type="string"/>
        <cvalue name="PLATYPUS_BINARY" value="Platypus.py"/>

        <cvalue name="KGENOME" value="${hg19DatabasesDirectory}/1000genomes/ALL.wgs.phase1_integrated_calls.20101123.indels_plain.vcf.gz" type="path"/>
        <cvalue name="DBSNP_INDEL" value="${hg19DatabasesDirectory}/dbSNP/dbSNP_141/00-All.INDEL.vcf.gz" type="path"/>

        <configurationValueBundle name='PIPE_CONFIG:INDEL_RELIABILITY'>
            <cvalue name='MAPABILITY' value='${hg19DatabaseUCSCDirectory}/"wgEncodeCrgMapabilityAlign100mer_chr.bedGraph.gz:::--breakPointMode --aEndOffset=1"' type="path" />
            <cvalue name='HISEQDEPTH' value='${hg19DatabaseUCSCDirectory}/HiSeqDepthTop10Pct_chr.bed.gz' type="path" />
            <cvalue name='SIMPLE_TANDEMREPEATS' value='${hg19DatabaseUCSCDirectory}/repeats/SimpleTandemRepeats_chr.bed.gz:4' type="path" />
            <cvalue name='REPEAT_MASKER' value='${hg19DatabaseUCSCDirectory}/Sept2013/UCSC_27Sept2013_RepeatMasker.bed.gz' type="path" />
            <cvalue name='DUKE_EXCLUDED' value='${hg19DatabaseUCSCDirectory}/DukeExcluded_chr.bed.gz' type="path" />
            <cvalue name='DAC_BLACKLIST' value='${hg19DatabaseUCSCDirectory}/DACBlacklist_chr.bed.gz' type="path" />
            <cvalue name='SELFCHAIN' value='${hg19DatabaseUCSCDirectory}/selfChain_chr.bed.gz:4::--maxNrOfMatches=5' type="path" />
        </configurationValueBundle>

        <!--#<PIPE_CONFIG:INDEL_DEEPANNOTATION
            # list of files to get deep annotation from (+ options)
            # up to 4 variables can be used, separated by :
            # before the = is the  name for the column in which the information will be reported
            # afterwards, the complete path to the sorted, headered, bgzipped and tabixed file
            # optional after the first ":" additional columns to include (default is the entry in the "name" column for bed)
            # optional after the second ":" report level for matches (default is 2)
            # optional after the third ":" additional options to pass through to annotate_vcf.pl
            # see also the usage report of ngs2/trunk/tools/annotate_vcf.pl
            # if any whitespaces are required, use quotation marks like in this example: #MAPABILITY="/ibios/co02/annotation/hg19/wgEncodeCrgMapabilityAlign100mer.bedGraph.gz:::-breakPointMode -aEndOffset=1"-->
        <configurationValueBundle name='PIPE_CONFIG:INDEL_DEEPANNOTATION'>
            <cvalue name='CpGislands' value='${hg19DatabaseUCSCDirectory}/Sept2013/UCSC_27Sept2013_CpG_islands.bed.gz' type="path" />
            <cvalue name='CgiMountains' value='${assembliesHG191000GenomesDirectory}/CustomDeepAnnotation/CgiMountains_chr.bed.gz:4' type="path" />
            <cvalue name='Enhancers' value='${hg19DatabaseUCSCDirectory}/Enhancers_Vista_2011_01_14_chr.bed.gz' type="path" />
            <cvalue name='miRNAs_snoRNAs' value='${hg19DatabasesDirectory}/miRNA/miRNA_snoRNAs_miRBaseRelease15_chr.bed.gz' type="path" />
            <cvalue name='miRBase18' value='${hg19DatabasesDirectory}/miRNA/miRBase_version-18_chr.bed.gz' type="path" />
            <cvalue name='miRNAtargets' value='${hg19DatabasesDirectory}/miRNA/miRNAsites_TargetScan_BartelLab_2011_01_14_chr.bed.gz' type="path" />
            <cvalue name='phastConsElem20bp' value='${hg19DatabaseUCSCDirectory}/phastConsElem_min20bp_chr.bed.gz:4' type="path" />
            <cvalue name='TFBScons' value='${hg19DatabaseUCSCDirectory}/tfbsConsSites_noncoding_merged_chr.bed.gz' type="path" />
            <cvalue name='COSMIC' value='${hg19DatabasesDirectory}/COSMIC/Cosmic_v66_hg19_coding_SNVs.bed.gz:7,8,9:1' type="path" />
            <cvalue name='ENCODE_DNASE' value='${hg19DatabaseUCSCDirectory}/Sept2013/UCSC_27Sept2013_DNase_cluster_V2.bed.gz' type="path" />
            <cvalue name='ENCODE_TFBS' value='${hg19DatabaseUCSCDirectory}/Sept2013/UCSC_27Sept2013_wgEncodeRegTfbsClusteredV3.bed.gz' type="path" />
        </configurationValueBundle>
        <!--#>PIPE_CONFIG-->
    </configurationvalues>
    <processingTools>
        <tool name="platypusConfidenceAnnotation" value="platypusConfidenceAnnotation.pl" basepath="indelCallingWorkflow"/>
        <tool name="platypusIndelExtractor" value="indel_extractor_v1.pl" basepath="indelCallingWorkflow"/>
        <tool name="screenshot" value="visualize.py" basepath="indelCallingWorkflow"/>

        <tool name="indelCalling" value="indelCalling.sh" basepath="indelCallingWorkflow">
            <resourcesets>
                <rset size="xs" memory="16" cores="8" nodes="1" walltime="1"/>
                <rset size="s" memory="16" cores="8" nodes="1" walltime="5"/>
                <rset size="m" memory="16" cores="8" nodes="1" walltime="25"/>
                <rset size="l" memory="16" cores="8" nodes="1" walltime="50"/>
                <rset size="xl" memory="16" cores="8" nodes="1" walltime="100"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILENAME_TUMOR_BAM"/>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILENAME_CONTROL_BAM"/>
            <output type="file" typeof="de.dkfz.b080.co.files.VCFFileForIndels" fnpatternselectiontag="rawVCF" scriptparameter="FILENAME_VCF_RAW"/>
            <!--<output type="tuple">-->
                <!--<output type="file" typeof="de.dkfz.b080.co.files.VCFFileForIndels" fnpatternselectiontag="rawVCFConfidenceAnnotation" scriptparameter="FILENAME_VCF_OUT"/>-->
            <!--</output>-->
        </tool>
        <tool name="indelAnnotation" value="platypusIndelAnnotation.sh" basepath="indelCallingWorkflow">
            <resourcesets>
				<rset size="s" memory="3" cores="1" nodes="1" walltime="2"/>
				<rset size="m" memory="3" cores="1" nodes="1" walltime="5"/>
                <rset size="l" memory="3" cores="1" nodes="1" walltime="10"/>
                <rset size="xl" memory="8" cores="2" nodes="1" walltime="10"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILENAME_TUMOR_BAM"/>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILENAME_CONTROL_BAM"/>
            <input type="file" typeof="de.dkfz.b080.co.files.VCFFileForIndels" scriptparameter="FILENAME_VCF_RAW"/>
            <output type="tuple">
                <output type="file" typeof="de.dkfz.b080.co.files.VCFFileForIndels" scriptparameter="FILENAME_VCF_OUT"/>
                <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CHECKPOINT"/>
            </output>
        </tool>
        <tool name="indelDeepAnnotation" value="vcf_pipeAnnotator.sh" basepath="indelCallingWorkflow">
			<resourcesets>
				<rset size="s" memory="1" cores="3" nodes="1" walltime="2"/>
				<rset size="m" memory="1" cores="3" nodes="1" walltime="2"/>
                <rset size="l" memory="1" cores="3" nodes="1" walltime="20"/>
                <rset size="xl" memory="8" cores="2" nodes="1" walltime="10"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILENAME_TUMOR_BAM"/>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILENAME_CONTROL_BAM"/>
            <input type="file" typeof="de.dkfz.b080.co.files.VCFFileForIndels" scriptparameter="FILENAME_VCF"/>
            <input type="string" setby="callingCode" scriptparameter="PIPENAME"/>
            <output type="tuple">
                <output type="file" typeof="de.dkfz.b080.co.files.VCFFileForIndels" scriptparameter="FILENAME_VCF_OUT"/>
                <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CHECKPOINT"/>
            </output>
        </tool>
        <tool name="indelVcfFilter" value="filter_vcf.sh" basepath="indelCallingWorkflow">
			<resourcesets>
				<rset size="s" memory="1" cores="1" nodes="1" walltime="1"/>
				<rset size="m" memory="1" cores="1" nodes="1" walltime="2"/>
                <rset size="l" memory="1" cores="1" nodes="1" walltime="10"/>
                <rset size="xl" memory="1" cores="1" nodes="1" walltime="4"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILE_TUMOR_BAM"/>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILE_CONTROL_BAM"/>
            <input type="file" typeof="de.dkfz.b080.co.files.VCFFileForIndels" scriptparameter="FILENAME_VCF"/>
            <!--<output type="tuple">-->
				<output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CHECKPOINT"/>
				<!--<output type="file" typeof="de.dkfz.b080.co.files.VCFFileForIndels" fnpatternselectiontag="somatic" scriptparameter="FILENAME_VCF_SOMATIC"/>-->
                <!--<output type="file" typeof="de.dkfz.b080.co.files.VCFFileForIndels" fnpatternselectiontag="somatic_functional" scriptparameter="FILENAME_VCF_SOMATIC_FUNCTIONAL"/>-->
            <!--</output>-->
        </tool>
    </processingTools>
    <filenames package='de.dkfz.b080.co.files' filestagesbase='de.dkfz.b080.co.files.COFileStage'>
        <filename class='VCFFileForIndels' selectiontag="rawVCF" derivedFrom="BamFile" pattern="${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indel_${pid}.vcf.raw.gz"/>
        <filename class='VCFFileForIndels' selectiontag="rawVCFConfidenceAnnotation" derivedFrom="BamFile" pattern="${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indel_${pid}.vcf.gz"/>
        <filename class='VCFFileForIndels' derivedFrom="VCFFileForIndels" pattern="${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indel_${pid}.vcf.gz"/>
        <filename class='VCFFileForIndels' selectiontag="somatic" derivedFrom='VCFFileForIndels' pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indel_${pid}_somatic_indels_conf_${cvalue,name="MIN_CONFIDENCE_SCORE"}_to_10.vcf'/>
        <filename class='VCFFileForIndels' selectiontag="somatic_functional" derivedFrom='VCFFileForIndels' pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indel_${pid}_somatic_functional_indels_conf_${cvalue,name="MIN_CONFIDENCE_SCORE"}_to_10.vcf'/>

        <filename class='TextFile' onMethod="VCFFileForIndels.annotate" pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indelCallingCheckPoint_${jobParameter,name="TOOL_ID"}'/>
        <filename class='TextFile' onMethod="VCFFileForIndels.deepAnnotate" pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indelCallingCheckPoint_${jobParameter,name="TOOL_ID"}'/>
        <filename class='TextFile' onMethod="VCFFileForIndels.filter" pattern='${outputAnalysisBaseDirectory}/${mpileupPlatypusOutputDirectory}/indelCallingCheckPoint_${jobParameter,name="TOOL_ID"}'/>

    </filenames>
</configuration>
